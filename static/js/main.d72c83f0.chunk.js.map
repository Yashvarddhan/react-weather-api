{"version":3,"sources":["components/Descriptions.jsx","weatherService.js","App.js","index.js","assets/sunny.jpg","assets/winter.jpg"],"names":["Descriptions","_ref","weather","units","tempUnit","windUnit","cards","id","icon","React","createElement","FaArrowDown","title","data","temp_min","toFixed","unit","FaArrowUp","temp_max","BiHappy","feels_like","MdCompress","pressure","MdOutlineWaterDrop","humidity","FaWind","speed","className","map","_ref2","key","concat","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getFormattedWeatherData","_asyncToGenerator","_callee","city","URL","_data$main","temp","country","_weather$","description","_args","arguments","_context","fetch","res","json","main","wind","sys","iconURL","iconId","_x","apply","App","_useState","useState","_useState2","_slicedToArray","setCity","_useState3","_useState4","setWeather","_useState5","_useState6","setUnits","_useState7","sunnyBg","_useState8","bg","setBg","useEffect","threshold","winterBg","fetchWeatherData","style","backgroundImage","onKeyDown","e","keyCode","currentTarget","blur","placeholder","onClick","button","isCelsius","innerText","handleUnitsClick","src","alt","ReactDOM","createRoot","document","getElementById","render","module","__webpack_require__","p"],"mappings":"sSAsEeA,EA/DM,SAAHC,GAA2B,IAArBC,EAAOD,EAAPC,QAASC,EAAKF,EAALE,MACzBC,EAAqB,WAAVD,EAAqB,QAAO,QACvCE,EAAqB,WAAVF,EAAqB,MAAQ,MAExCG,EAAQ,CACZ,CACEC,GAAI,EACJC,KAAMC,IAAAC,cAACC,IAAW,MAClBC,MAAO,MACPC,KAAMX,EAAQY,SAASC,UACvBC,KAAMZ,GAER,CACEG,GAAI,EACJC,KAAMC,IAAAC,cAACO,IAAS,MAChBL,MAAO,MACPC,KAAMX,EAAQgB,SAASH,UACvBC,KAAMZ,GAER,CACEG,GAAI,EACJC,KAAMC,IAAAC,cAACS,IAAO,MACdP,MAAO,aACPC,KAAMX,EAAQkB,WAAWL,UACzBC,KAAMZ,GAER,CACEG,GAAI,EACJC,KAAMC,IAAAC,cAACW,IAAU,MACjBT,MAAO,WACPC,KAAMX,EAAQoB,SACdN,KAAM,OAER,CACET,GAAI,EACJC,KAAMC,IAAAC,cAACa,IAAkB,MACzBX,MAAO,WACPC,KAAMX,EAAQsB,SACdR,KAAM,KAER,CACET,GAAI,EACJC,KAAMC,IAAAC,cAACe,IAAM,MACbb,MAAO,aACPC,KAAMX,EAAQwB,MAAMX,UACpBC,KAAMX,IAGV,OACEI,IAAAC,cAAA,OAAKiB,UAAU,iCACZrB,EAAMsB,IAAI,SAAAC,GAAA,IAAGtB,EAAEsB,EAAFtB,GAAIC,EAAIqB,EAAJrB,KAAMI,EAAKiB,EAALjB,MAAOC,EAAIgB,EAAJhB,KAAMG,EAAIa,EAAJb,KAAI,OACvCP,IAAAC,cAAA,OAAKoB,IAAKvB,EAAIoB,UAAU,QACtBlB,IAAAC,cAAA,OAAKiB,UAAU,0BACZnB,EACDC,IAAAC,cAAA,aAAQE,IAEVH,IAAAC,cAAA,aAAAqB,OAAQlB,EAAI,KAAAkB,OAAIf,sBC9D1BgB,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAV,EAAAW,GAAAD,EAAAV,GAAAW,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAV,EAAAY,GAAA,OAAAP,OAAAI,eAAAC,EAAAV,EAAA,CAAAY,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAV,GAAA,IAAAqB,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAV,EAAAY,GAAA,OAAAF,EAAAV,GAAAY,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAhC,EAAA8B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAY,GAAA,SAAAO,EAAA/C,GAAA,0BAAAgD,QAAA,SAAAC,GAAAlC,EAAAf,EAAAiD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAlD,EAAAsC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAL,EAAAmC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAjG,EAAAmC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAd,EAAAoC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAhB,EAAAwG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA5G,EAAA6G,KAAA,SAAAJ,GAAA,OAAAvG,OAAA4G,eAAA5G,OAAA4G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAtG,UAAAD,OAAA6B,OAAAkB,GAAAwD,GAAAzG,EAAAgH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAAnD,WAAAe,EAAAoC,EAAAnD,UAAAW,EAAA,kBAAA8B,OAAA5C,EAAAsD,gBAAAtD,EAAAiH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAvD,EAAAwG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAjD,EAAAoH,KAAA,SAAAC,GAAA,IAAAC,EAAApH,OAAAmH,GAAAD,EAAA,WAAAvH,KAAAyH,EAAAF,EAAAtB,KAAAjG,GAAA,OAAAuH,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAAxG,EAAAuH,EAAAI,MAAA,GAAA3H,KAAAyH,EAAA,OAAAlC,EAAA3E,MAAAZ,EAAAuF,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAApF,EAAAgD,SAAAf,EAAA9B,UAAA,CAAAwG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAvH,EAAAmC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAhI,EAAAmC,KAAAiD,EAAA,YAAA6C,EAAAjI,EAAAmC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAtH,EAAAmC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAxC,EADA,IAKM4I,EAAuB,eAAA5K,EAAA6K,YAAA9I,IAAA8G,KAAG,SAAAiC,EAAOC,GAAI,IAAA7K,EAAA8K,EAAApK,EAAAX,EAAAgL,EAAAC,EAAA/J,EAAAN,EAAAI,EAAAI,EAAAE,EAAAE,EAAA0J,EAAAvC,EAAAwC,EAAAC,EAAA9K,EAAA+K,EAAAC,UAAA,OAAAxJ,IAAAwB,KAAA,SAAAiI,GAAA,cAAAA,EAAA9B,KAAA8B,EAAApE,MAAA,OAC4D,OAD1DlH,EAAKoL,EAAAjD,OAAA,QAAAtB,IAAAuE,EAAA,GAAAA,EAAA,GAAG,SAC7CN,EAAG,qDAAAlJ,OAAwDiJ,EAAI,WAAAjJ,OANvD,mCAMwE,WAAAA,OAAU5B,GAAKsL,EAAApE,KAAA,EAElFqE,MAAMT,GACtBhF,KAAK,SAAC0F,GAAG,OAAKA,EAAIC,SAClB3F,KAAK,SAACpF,GAAI,OAAKA,IAAK,OAUE,OAZnBA,EAAI4K,EAAA/E,KAKRxG,EAKEW,EALFX,QAAOgL,EAKLrK,EAJFgL,KAAQV,EAAID,EAAJC,KAAM/J,EAAU8J,EAAV9J,WAAYN,EAAQoK,EAARpK,SAAUI,EAAQgK,EAARhK,SAAUI,EAAQ4J,EAAR5J,SAAUE,EAAQ0J,EAAR1J,SAChDE,EAGNb,EAHFiL,KAAQpK,MACD0J,EAELvK,EAFFkL,IAAOX,QACPvC,EACEhI,EADFgI,KAAIwC,EAGwBnL,EAAQ,GAA9BoL,EAAWD,EAAXC,YAAa9K,EAAI6K,EAAJ7K,KAAIiL,EAAA5E,OAAA,SAElB,CACLyE,cACAU,SAtBiBC,EAsBIzL,EAtBE,qCAAAuB,OACYkK,EAAM,YAsBzCd,OACA/J,aACAN,WACAI,WACAI,WACAE,WACAE,QACA0J,UACAvC,SACD,wBAAA4C,EAAA3B,OAhCiB,IAACmC,GAgClBlB,MACF,gBA9B4BmB,GAAA,OAAAjM,EAAAkM,MAAAtH,KAAA2G,YAAA,gBCJ7BxJ,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAV,EAAAW,GAAAD,EAAAV,GAAAW,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAV,EAAAY,GAAA,OAAAP,OAAAI,eAAAC,EAAAV,EAAA,CAAAY,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAV,GAAA,IAAAqB,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAV,EAAAY,GAAA,OAAAF,EAAAV,GAAAY,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAhC,EAAA8B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAY,GAAA,SAAAO,EAAA/C,GAAA,0BAAAgD,QAAA,SAAAC,GAAAlC,EAAAf,EAAAiD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAlD,EAAAsC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAL,EAAAmC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAjG,EAAAmC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAd,EAAAoC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAhB,EAAAwG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA5G,EAAA6G,KAAA,SAAAJ,GAAA,OAAAvG,OAAA4G,eAAA5G,OAAA4G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAtG,UAAAD,OAAA6B,OAAAkB,GAAAwD,GAAAzG,EAAAgH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAAnD,WAAAe,EAAAoC,EAAAnD,UAAAW,EAAA,kBAAA8B,OAAA5C,EAAAsD,gBAAAtD,EAAAiH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAvD,EAAAwG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAjD,EAAAoH,KAAA,SAAAC,GAAA,IAAAC,EAAApH,OAAAmH,GAAAD,EAAA,WAAAvH,KAAAyH,EAAAF,EAAAtB,KAAAjG,GAAA,OAAAuH,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAAxG,EAAAuH,EAAAI,MAAA,GAAA3H,KAAAyH,EAAA,OAAAlC,EAAA3E,MAAAZ,EAAAuF,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAApF,EAAAgD,SAAAf,EAAA9B,UAAA,CAAAwG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAvH,EAAAmC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAhI,EAAAmC,KAAAiD,EAAA,YAAA6C,EAAAjI,EAAAmC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAtH,EAAAmC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAxC,EAmFemK,MA5Ef,WAAe,IAAAC,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlCrB,EAAIuB,EAAA,GAAEE,EAAOF,EAAA,GAAAG,EACUJ,mBAAS,MAAKK,EAAAH,YAAAE,EAAA,GAArCxM,EAAOyM,EAAA,GAAEC,EAAUD,EAAA,GAAAE,EACAP,mBAAS,UAASQ,EAAAN,YAAAK,EAAA,GAArC1M,EAAK2M,EAAA,GAAEC,EAAQD,EAAA,GAAAE,EACFV,mBAASW,KAAQC,EAAAV,YAAAQ,EAAA,GAA9BG,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAgChB,OA9BAG,oBAAU,YACc,eAAApN,EAAA6K,YAAA9I,IAAA8G,KAAG,SAAAiC,IAAA,IAAAlK,EAAAyM,EAAA,OAAAtL,IAAAwB,KAAA,SAAAiI,GAAA,cAAAA,EAAA9B,KAAA8B,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACJwD,EAAwBG,EAAM7K,GAAM,OAAjDU,EAAI4K,EAAA/E,KACVkG,EAAW/L,GAGLyM,EAAsB,WAAVnN,EAAqB,GAAK,GACxCU,EAAKsK,MAAQmC,EAAWF,EAAMG,KAC7BH,EAAMH,KAAS,wBAAAxB,EAAA3B,SAAAiB,MACrB,kBARqB,OAAA9K,EAAAkM,MAAAtH,KAAA2G,YAAA,EAUtBgC,IACC,CAACrN,EAAO6K,IAqBRvK,IAAAC,cAAA,OAAKiB,UAAU,MAAM8L,MAAO,CAAEC,gBAAe,OAAA3L,OAASoL,EAAE,OAEvD1M,IAAAC,cAAA,OAAKiB,UAAU,WACZzB,GACCO,IAAAC,cAAA,OAAKiB,UAAU,aACblB,IAAAC,cAAA,OAAKiB,UAAU,2BACblB,IAAAC,cAAA,SACEiN,UAjBU,SAACC,GACL,KAAdA,EAAEC,UACJpB,EAAQmB,EAAEE,cAAcpL,OACxBkL,EAAEE,cAAcC,SAeNxJ,KAAK,OACLsE,KAAK,OACLmF,YAAY,kBAEdvN,IAAAC,cAAA,UAAQuN,QAAS,SAACL,GAAC,OA/BN,SAACA,GACxB,IAAMM,EAASN,EAAEE,cAGXK,EAA4B,MAFdD,EAAOE,UAAUvE,MAAM,GAG3CqE,EAAOE,UAAYD,EAAY,QAAO,QACtCpB,EAASoB,EAAY,SAAW,YAyBEE,CAAiBT,KAAI,UAG/CnN,IAAAC,cAAA,OAAKiB,UAAU,gCACblB,IAAAC,cAAA,OAAKiB,UAAU,QACblB,IAAAC,cAAA,aAAAqB,OAAQ7B,EAAQ2I,KAAI,MAAA9G,OAAK7B,EAAQkL,UACjC3K,IAAAC,cAAA,OAAK4N,IAAKpO,EAAQ8L,QAASuC,IAAI,gBAC/B9N,IAAAC,cAAA,UAAKR,EAAQoL,cAEf7K,IAAAC,cAAA,OAAKiB,UAAU,eACblB,IAAAC,cAAA,aAAAqB,OAAQ7B,EAAQiL,KAAKpK,UAAS,SAAAgB,OAClB,WAAV5B,EAAqB,IAAM,QAMjCM,IAAAC,cAACV,EAAY,CAACE,QAASA,EAASC,MAAOA,QCvEtCqO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOnO,IAAAC,cAAC0L,EAAG,0BCNhByC,EAAA5M,QAAiB6M,EAAAC,EAAuB,qDCAxCF,EAAA5M,QAAiB6M,EAAAC,EAAuB","file":"static/js/main.d72c83f0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./descriptions.css\";\n\nimport { FaArrowUp, FaArrowDown, FaWind } from \"react-icons/fa\";\nimport { BiHappy } from \"react-icons/bi\";\nimport { MdCompress, MdOutlineWaterDrop } from \"react-icons/md\";\n\nconst Descriptions = ({ weather, units }) => {\n  const tempUnit = units === \"metric\" ? \"°C\" : \"°F\";\n  const windUnit = units === \"metric\" ? \"m/s\" : \"m/h\";\n\n  const cards = [\n    {\n      id: 1,\n      icon: <FaArrowDown />,\n      title: \"min\",\n      data: weather.temp_min.toFixed(),\n      unit: tempUnit,\n    },\n    {\n      id: 2,\n      icon: <FaArrowUp />,\n      title: \"max\",\n      data: weather.temp_max.toFixed(),\n      unit: tempUnit,\n    },\n    {\n      id: 3,\n      icon: <BiHappy />,\n      title: \"feels like\",\n      data: weather.feels_like.toFixed(),\n      unit: tempUnit,\n    },\n    {\n      id: 4,\n      icon: <MdCompress />,\n      title: \"pressure\",\n      data: weather.pressure,\n      unit: \"hPa\",\n    },\n    {\n      id: 5,\n      icon: <MdOutlineWaterDrop />,\n      title: \"humidity\",\n      data: weather.humidity,\n      unit: \"%\",\n    },\n    {\n      id: 6,\n      icon: <FaWind />,\n      title: \"wind speed\",\n      data: weather.speed.toFixed(),\n      unit: windUnit,\n    },\n  ];\n  return (\n    <div className=\"section section__descriptions\">\n      {cards.map(({ id, icon, title, data, unit }) => (\n        <div key={id} className=\"card\">\n          <div className=\"description__card-icon\">\n            {icon}\n            <small>{title}</small>\n          </div>\n          <h2>{`${data} ${unit}`}</h2>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Descriptions;\n","const API_KEY = \"f1ab751fa6190baa406ba4ccc27e3e03\";\n\nconst makeIconURL = (iconId) =>\n  `https://openweathermap.org/img/wn/${iconId}@2x.png`;\n\nconst getFormattedWeatherData = async (city, units = \"metric\") => {\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${units}`;\n\n  const data = await fetch(URL)\n    .then((res) => res.json())\n    .then((data) => data);\n\n  const {\n    weather,\n    main: { temp, feels_like, temp_min, temp_max, pressure, humidity },\n    wind: { speed },\n    sys: { country },\n    name,\n  } = data;\n\n  const { description, icon } = weather[0];\n\n  return {\n    description,\n    iconURL: makeIconURL(icon),\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    pressure,\n    humidity,\n    speed,\n    country,\n    name,\n  };\n};\n\nexport { getFormattedWeatherData };\n","import sunnyBg from \"./assets/sunny.jpg\";\nimport React from 'react';\nimport winterBg from \"./assets/winter.jpg\";\nimport Descriptions from \"./components/Descriptions\";\nimport { useEffect, useState } from \"react\";\nimport { getFormattedWeatherData } from \"./weatherService\";\n\n\nfunction App() {\n  const [city, setCity] = useState(\"Paris\");\n  const [weather, setWeather] = useState(null);\n  const [units, setUnits] = useState(\"metric\");\n  const [bg, setBg] = useState(sunnyBg);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      const data = await getFormattedWeatherData(city, units);\n      setWeather(data);\n\n      // dynamic bg\n      const threshold = units === \"metric\" ? 20 : 60;\n      if (data.temp <= threshold) setBg(winterBg);\n      else setBg(sunnyBg);\n    };\n\n    fetchWeatherData();\n  }, [units, city]);\n\n  const handleUnitsClick = (e) => {\n    const button = e.currentTarget;\n    const currentUnit = button.innerText.slice(1);\n\n    const isCelsius = currentUnit === \"C\";\n    button.innerText = isCelsius ? \"°F\" : \"°C\";\n    setUnits(isCelsius ? \"metric\" : \"imperial\");\n  };\n\n  const enterKeyPressed = (e) => {\n    if (e.keyCode === 13) {\n      setCity(e.currentTarget.value);\n      e.currentTarget.blur();\n    }\n  };\n\n  return (\n   \n      \n     <div className=\"app\" style={{ backgroundImage: `url(${bg})` }}> \n     \n      <div className=\"overlay\">\n        {weather && (\n          <div className=\"container\">\n            <div className=\"section section__inputs\">\n              <input\n                onKeyDown={enterKeyPressed}\n                type=\"text\"\n                name=\"city\"\n                placeholder=\"Enter City...\"\n              />\n              <button onClick={(e) => handleUnitsClick(e)}>°F</button>\n            </div>\n\n            <div className=\"section section__temperature\">\n              <div className=\"icon\">\n                <h3>{`${weather.name}, ${weather.country}`}</h3>\n                <img src={weather.iconURL} alt=\"weatherIcon\" />\n                <h3>{weather.description}</h3>\n              </div>\n              <div className=\"temperature\">\n                <h1>{`${weather.temp.toFixed()} °${\n                  units === \"metric\" ? \"C\" : \"F\"\n                }`}</h1>\n              </div>\n            </div>\n\n            {/* bottom description */}\n            <Descriptions weather={weather} units={units} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n","module.exports = __webpack_public_path__ + \"static/media/sunny.a8801997.jpg\";","module.exports = __webpack_public_path__ + \"static/media/winter.bdda301c.jpg\";"],"sourceRoot":""}